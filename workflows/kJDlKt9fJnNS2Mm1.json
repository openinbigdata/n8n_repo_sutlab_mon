{
  "active": false,
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Get all workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all workflows": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Github parameters": {
      "main": [
        [
          {
            "node": "Get current repo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get current repo": {
      "main": [
        [
          {
            "node": "If backup file is too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Backup to Github": {
      "main": [
        [
          {
            "node": "Set Github parameters",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "If backup file is too large": {
      "main": [
        [],
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Compare version",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Compare version": {
      "main": [
        [
          {
            "node": "Check status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check status": {
      "main": [
        [],
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        []
      ]
    }
  },
  "createdAt": "2025-08-20T14:55:45.685Z",
  "id": "kJDlKt9fJnNS2Mm1",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "n8n backups to Github",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        160,
        80
      ],
      "id": "07b8f9f7-d122-4b6a-854c-049cca897e37",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "={{ $workflow.id }}",
          "mode": "id"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        880,
        100
      ],
      "id": "863818a0-8658-4996-a84d-8140abad3fa7",
      "name": "Execute Workflow"
    },
    {
      "parameters": {
        "content": "## Get for all workflows",
        "height": 320,
        "width": 1120
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        0
      ],
      "typeVersion": 1,
      "id": "eab06fcb-d204-4c21-b92b-6d8ff00bf9d3",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "returnAll": false,
        "limit": 1,
        "filters": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.n8n",
      "typeVersion": 1,
      "position": [
        380,
        80
      ],
      "id": "3d487eeb-4348-45d1-9409-47b9fb5a52ac",
      "name": "Get all workflows",
      "credentials": {
        "n8nApi": {
          "id": "pfzV0BlGA9kGNMNw",
          "name": "n8n account - sutlab mon"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "1cffc5fa-2461-4026-aa2c-0d121cd5efdf",
              "name": "repo.owner",
              "value": "openinbigdata",
              "type": "string"
            },
            {
              "id": "24b0dd7b-b74c-4dcc-af5f-82376aad7d24",
              "name": "repo.name",
              "value": "sutlab-mon-n8n",
              "type": "string"
            },
            {
              "id": "73e8b9a8-51b8-49e5-825c-be2b01ac0868",
              "name": "repo.path",
              "value": "workflows/",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        400,
        460
      ],
      "id": "470158aa-b3d7-4005-806b-3d53afebf3d7",
      "name": "Set Github parameters"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "value": "={{ $json.repo.owner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $json.repo.name }}",
          "mode": "name"
        },
        "filePath": "={{ $json.repo.path }}{{ $('Backup to Github').item.json.id }}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        620,
        460
      ],
      "id": "24010924-381b-4940-ab11-6e1f9a505245",
      "name": "Get current repo",
      "webhookId": "a2f9902b-5dc0-4838-a72a-873f73b55529",
      "credentials": {
        "githubApi": {
          "id": "GrOw0ku6nxZfTTsN",
          "name": "GitHub account - token"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        160,
        460
      ],
      "id": "c271774f-ae90-478c-8b3e-d4c563828c92",
      "name": "Backup to Github"
    },
    {
      "parameters": {
        "content": "## Sub Workflow - Check for existing backups",
        "height": 300,
        "width": 1120,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        360
      ],
      "typeVersion": 1,
      "id": "bb0f5ba4-ec5a-4327-bd11-2848d976e10e",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4fec6e4d-00d0-40a3-8674-44bfd774f3eb",
              "leftValue": "{{ $json.content }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              }
            },
            {
              "id": "92844985-b4b4-45b8-95d7-b56039e2bdc1",
              "leftValue": "={{ $json.error }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        840,
        460
      ],
      "id": "2c4f11b1-a65e-4e37-9890-ffe5a07343ab",
      "name": "If backup file is too large",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        160,
        800
      ],
      "id": "5edd3410-f0f0-4bc7-83c7-e98a3a5d114b",
      "name": "Merge"
    },
    {
      "parameters": {
        "content": "## Backup new or apply changes",
        "height": 340,
        "width": 1120,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        0,
        680
      ],
      "typeVersion": 1,
      "id": "31b311fd-58e5-404a-80cb-889d18c989b9",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n\n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_string = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n}\n// No file returned / new workflow\nelse if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n\n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_string = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n} \nelse {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_string = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        380,
        800
      ],
      "id": "ce576db6-1a98-4b90-a223-98c5f761b33f",
      "name": "Compare version"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.github_status }}",
                    "rightValue": "same",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "e2ea58c5-a563-4bbd-acdb-9d59fe262536"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "0"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0092ab03-b828-4e1b-80fd-5d26d3ff7722",
                    "leftValue": "={{ $json.github_status }}",
                    "rightValue": "different",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "6a5e39b3-1bbf-4d23-9e36-393da55c8de1",
                    "leftValue": "={{ $json.github_status }}",
                    "rightValue": "new",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2"
            }
          ]
        },
        "options": {
          "fallbackOutput": "none"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        600,
        800
      ],
      "id": "1923fcba-58fe-478d-8ab8-3f644c3c3655",
      "name": "Check status"
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "value": "={{ $('Set Github parameters').item.json.repo.owner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Set Github parameters').item.json.repo.name }}",
          "mode": "name"
        },
        "filePath": "={{ $('Set Github parameters').item.json.repo.path }}{{ $('Backup to Github').first().json.id }}.json",
        "fileContent": "={{ $json.n8n_data_string }}",
        "commitMessage": "={{ $('Backup to Github').item.json.name }} ({{ $json.github_status }})"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        820,
        700
      ],
      "id": "c9f5beef-d0ac-472c-ac70-d4c3144ed02a",
      "name": "Edit existing file",
      "webhookId": "a8a4f18c-fa4c-4527-826b-1a5e7f6a884c",
      "credentials": {
        "githubApi": {
          "id": "GrOw0ku6nxZfTTsN",
          "name": "GitHub account - token"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "value": "={{ $('Set Github parameters').item.json.repo.owner }}",
          "mode": "name"
        },
        "repository": {
          "__rl": true,
          "value": "={{ $('Set Github parameters').item.json.repo.name }}",
          "mode": "name"
        },
        "filePath": "={{ $('Set Github parameters').item.json.repo.path }}{{ $('Backup to Github').first().json.id }}.json",
        "fileContent": "={{ $json.n8n_data_string }}",
        "commitMessage": "={{ $('Backup to Github').item.json.name }} ({{ $json.github_status }})"
      },
      "type": "n8n-nodes-base.github",
      "typeVersion": 1.1,
      "position": [
        820,
        880
      ],
      "id": "8b451eb6-1a93-4433-aa1b-5354431a9ff4",
      "name": "Create new file",
      "webhookId": "a8a4f18c-fa4c-4527-826b-1a5e7f6a884c",
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "GrOw0ku6nxZfTTsN",
          "name": "GitHub account - token"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        600,
        60
      ],
      "id": "c45c714e-0094-4699-8f7d-7ef622c6c980",
      "name": "Loop Over Items"
    }
  ],
  "pinData": {
    "Backup to Github": [
      {
        "json": {
          "createdAt": "2025-08-04T12:16:22.023Z",
          "updatedAt": "2025-08-07T17:44:53.311Z",
          "id": "2JqHWqu1onnQ136a",
          "name": "Erros desconhecidos - v3",
          "active": false,
          "isArchived": false,
          "nodes": [
            {
              "parameters": {
                "operation": "executeQuery",
                "query": "SELECT\n\t'Movimentos transacionais' as movimento,\n\t'Adesão' as processo, \n\tCASE\n\t\tWHEN mt.id_seguradora = 672 THEN 'Zurich'\n\t\tWHEN mt.id_seguradora = 671 THEN 'Cardif'\n\tEND as seguradora,\n\tmt.etapa, \n\tmt.status,  \t\n    REGEXP_REPLACE(\n      REGEXP_REPLACE(\n        REGEXP_REPLACE(\n          REGEXP_REPLACE(\n            mt.razao_status,'(\"timestamp\"\\\\s*:\\\\s*\")[0-9]{4}-[0-9]{2}-[0-9]{2}\\\\s[0-9]{2}:[0-9]{2}:[0-9]{2}(\")',\n            '\\\\1***\\\\2'\n          ),\n          '([0-9]{11})',\n          '***'\n        ),\n        '(CEP\\\\s+)([0-9]{8})',\n        '\\\\***'\n      ),\n      '([0-9]{1,3})\\\\s+anos',\n      '*** anos'\n    ) AS razao,\n\tcount(*) as quantidade_erros  \nFROM\n  `core-data-streams-prod-database`.movimentos_transacionais mt\nWHERE 1=1\n  AND mt.id_seguradora in (671, 672)\n  AND (\n  \ttrim(mt.razao_status) <> '' \n  \tand trim(mt.razao_status) is not null \n  \tand trim(mt.razao_status) <> 'emitido'\n  \tand trim(mt.razao_status) <> 'em processamento'\n  \t)\n  AND mt.timestamp_processamento >= NOW() - INTERVAL 1 HOUR\ngroup by\n\t1, 2, 3, 4, 5, 6\norder by\n\t7 desc;",
                "options": {
                  "replaceEmptyStrings": true
                }
              },
              "type": "n8n-nodes-base.mySql",
              "typeVersion": 2.4,
              "position": [
                -1740,
                -980
              ],
              "id": "ee01715e-1689-40d6-aa0a-65826001ebca",
              "name": "MySQL - Lê erros da última hora",
              "credentials": {
                "mySql": {
                  "id": "5YkbRXBaQCU0hyQs",
                  "name": "MySQL Mon"
                }
              }
            },
            {
              "parameters": {},
              "type": "n8n-nodes-base.manualTrigger",
              "typeVersion": 1,
              "position": [
                -2120,
                -740
              ],
              "id": "85c83e25-13f0-4361-b7df-7a8449b2ca05",
              "name": "When clicking ‘Execute workflow’",
              "disabled": true
            },
            {
              "parameters": {
                "mode": "runOnceForEachItem",
                "jsCode": "// const seguradora = item.json.seguradora;\nconst erro = item.json.razao;\nconst quantidade_erros_source = item.json.quantidade_erros;\n\n// Escapa todas as aspas simples\nconst erroEscapado = erro.replace(/'/g, \"''\");\n\n// item.json.seguradora = seguradora;\nitem.json.erro_sql = erroEscapado;\nitem.json.quantidade_erros_source = quantidade_erros_source;\nreturn item;\n"
              },
              "type": "n8n-nodes-base.code",
              "typeVersion": 2,
              "position": [
                -1520,
                -880
              ],
              "id": "4433f7da-edbd-40c7-92ea-b46600b9e982",
              "name": "Escapando aspas simples na msg de erro"
            },
            {
              "parameters": {
                "content": "## Fluxos para críticas de Adesão",
                "height": 80,
                "width": 380
              },
              "type": "n8n-nodes-base.stickyNote",
              "position": [
                -2140,
                -1120
              ],
              "typeVersion": 1,
              "id": "a4838e84-ebc4-4bdb-9595-d84597200451",
              "name": "Sticky Note"
            },
            {
              "parameters": {
                "assignments": {
                  "assignments": [
                    {
                      "id": "29491a57-83b9-4c1d-80d6-ade7a5dea775",
                      "name": "email_movedesk",
                      "value": "atendimento@sutservices-solucoes-em-tecnologia-ltda.movidesk.com",
                      "type": "string"
                    },
                    {
                      "id": "e4424b08-f73a-47cc-94e8-98497b7c40e9",
                      "name": "threshould_conhecido",
                      "value": 10,
                      "type": "number"
                    }
                  ]
                },
                "options": {}
              },
              "type": "n8n-nodes-base.set",
              "typeVersion": 3.4,
              "position": [
                -1940,
                -980
              ],
              "id": "64f825c0-0d14-4b6f-8dd9-4527adc3933f",
              "name": "Variables"
            },
            {
              "parameters": {
                "rule": {
                  "interval": [
                    {
                      "field": "hours"
                    }
                  ]
                }
              },
              "type": "n8n-nodes-base.scheduleTrigger",
              "typeVersion": 1.2,
              "position": [
                -2120,
                -980
              ],
              "id": "82a9eeb1-066a-4adf-9c05-b55a7d3010e9",
              "name": "Schedule Trigger"
            },
            {
              "parameters": {
                "operation": "executeQuery",
                "query": "select \n  '{{ $json.movimento }}' as movimento,\n  '{{ $json.processo }}' as processo,\n  '{{ $json.seguradora }}'as seguradora,\n  '{{ $json.etapa }}' as etapa,\n  '{{ $json.status }}' as status,\n  '{{ $json.erro_sql }}'as erro,\n  {{ $json.quantidade_erros_source }} as quantidade_erros_source,\n  count(*) as quantidade_erros\nfrom \n  public.erros_conhecidos ec \nwhere \n  ec.movimento = '{{ $json.movimento }}'\n  and ec.processo = '{{ $json.processo }}'\n  and ec.seguradora = '{{ $json.seguradora }}'\n  and ec.etapa = '{{ $json.etapa }}'\n  and ec.status = '{{ $json.status }}'\n  and ec.erro = '{{ $json.erro_sql }}'",
                "options": {}
              },
              "type": "n8n-nodes-base.postgres",
              "typeVersion": 2.6,
              "position": [
                -1160,
                -780
              ],
              "id": "f9115b7c-b445-4e13-bed2-596c5645e14d",
              "name": "Erro conhecido?",
              "credentials": {
                "postgres": {
                  "id": "P09H1er9n2eb0uAq",
                  "name": "Postgres Sutlab Mon"
                }
              }
            },
            {
              "parameters": {
                "rules": {
                  "values": [
                    {
                      "conditions": {
                        "options": {
                          "caseSensitive": true,
                          "leftValue": "",
                          "typeValidation": "strict",
                          "version": 2
                        },
                        "conditions": [
                          {
                            "leftValue": "={{ $json.quantidade_erros }}",
                            "rightValue": "0",
                            "operator": {
                              "type": "string",
                              "operation": "equals"
                            },
                            "id": "9e642630-ab98-4119-aaeb-59750ba054e1"
                          }
                        ],
                        "combinator": "and"
                      },
                      "renameOutput": true,
                      "outputKey": "Desconhecido"
                    },
                    {
                      "conditions": {
                        "options": {
                          "caseSensitive": true,
                          "leftValue": "",
                          "typeValidation": "strict",
                          "version": 2
                        },
                        "conditions": [
                          {
                            "id": "325efd98-4437-4deb-9daa-1af5811fe072",
                            "leftValue": "={{ $json.quantidade_erros }}",
                            "rightValue": "0",
                            "operator": {
                              "type": "string",
                              "operation": "notEquals"
                            }
                          }
                        ],
                        "combinator": "and"
                      },
                      "renameOutput": true,
                      "outputKey": "Conhecido"
                    }
                  ]
                },
                "options": {}
              },
              "type": "n8n-nodes-base.switch",
              "typeVersion": 3.2,
              "position": [
                -800,
                -780
              ],
              "id": "6a7f39e3-2fd5-49e6-9928-60a3d2ccef70",
              "name": "Conhecido ou desconhecido?"
            },
            {
              "parameters": {
                "fromEmail": "rgouvea@suthub.com",
                "toEmail": "={{ $item(\"0\").$node[\"Variables\"].json[\"email_movedesk\"] }}",
                "subject": "Erros desconhecidos",
                "emailFormat": "text",
                "text": "=Foi detectado na última hora em \"Críticas CSF\", um erro desconhecido.\n\nProcesso: Adesão\nSeguradora: {{ $json.seguradora }}\nEtapa: {{ $json.etapa }}\nErro: {{ $json.erro }}\nQuantidade: {{ $json.quantidade_erros_source }}\n\nDeveloper by Data Team\nCreated: 2025-07-31\nUpdated: 2025-07-31",
                "options": {}
              },
              "type": "n8n-nodes-base.emailSend",
              "typeVersion": 2.1,
              "position": [
                -520,
                -920
              ],
              "id": "ea205f96-68a2-4c3f-bf55-ddee0379a291",
              "name": "Abre chamado para erro desconhecido",
              "webhookId": "02001d01-1e42-46f4-bbb8-1fa413102c0e",
              "credentials": {
                "smtp": {
                  "id": "490Ja5pa65ODxxXD",
                  "name": "SMTP Sutlab Mon"
                }
              }
            },
            {
              "parameters": {
                "schema": {
                  "__rl": true,
                  "mode": "list",
                  "value": "public"
                },
                "table": {
                  "__rl": true,
                  "value": "erros_conhecidos",
                  "mode": "list",
                  "cachedResultName": "erros_conhecidos"
                },
                "columns": {
                  "mappingMode": "defineBelow",
                  "value": {
                    "seguradora": "={{ $('Erro conhecido?').item.json.seguradora }}",
                    "erro": "={{ $('Erro conhecido?').item.json.erro }}",
                    "movimento": "={{ $('Conhecido ou desconhecido?').item.json.movimento }}",
                    "processo": "={{ $('Conhecido ou desconhecido?').item.json.processo }}",
                    "etapa": "={{ $('Conhecido ou desconhecido?').item.json.etapa }}",
                    "status": "={{ $('Conhecido ou desconhecido?').item.json.status }}"
                  },
                  "matchingColumns": [
                    "id"
                  ],
                  "schema": [
                    {
                      "id": "id",
                      "displayName": "id",
                      "required": false,
                      "defaultMatch": true,
                      "display": true,
                      "type": "number",
                      "canBeUsedToMatch": true,
                      "removed": true
                    },
                    {
                      "id": "movimento",
                      "displayName": "movimento",
                      "required": true,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true,
                      "removed": false
                    },
                    {
                      "id": "processo",
                      "displayName": "processo",
                      "required": true,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true,
                      "removed": false
                    },
                    {
                      "id": "seguradora",
                      "displayName": "seguradora",
                      "required": true,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true
                    },
                    {
                      "id": "etapa",
                      "displayName": "etapa",
                      "required": true,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true,
                      "removed": false
                    },
                    {
                      "id": "status",
                      "displayName": "status",
                      "required": true,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true,
                      "removed": false
                    },
                    {
                      "id": "erro",
                      "displayName": "erro",
                      "required": true,
                      "defaultMatch": false,
                      "display": true,
                      "type": "string",
                      "canBeUsedToMatch": true
                    },
                    {
                      "id": "data_criacao",
                      "displayName": "data_criacao",
                      "required": false,
                      "defaultMatch": false,
                      "display": true,
                      "type": "dateTime",
                      "canBeUsedToMatch": true
                    }
                  ],
                  "attemptToConvertTypes": false,
                  "convertFieldsToString": false
                },
                "options": {}
              },
              "type": "n8n-nodes-base.postgres",
              "typeVersion": 2.6,
              "position": [
                -280,
                -940
              ],
              "id": "77d3f1bc-914f-45ed-9f6d-b3527a1a723e",
              "name": "Carrega erro desconhecido",
              "credentials": {
                "postgres": {
                  "id": "P09H1er9n2eb0uAq",
                  "name": "Postgres Sutlab Mon"
                }
              }
            },
            {
              "parameters": {},
              "type": "n8n-nodes-base.noOp",
              "typeVersion": 1,
              "position": [
                -520,
                -700
              ],
              "id": "7d5995fc-7b72-4769-a9ad-564c9d635bc8",
              "name": "No Operation, do nothing"
            },
            {
              "parameters": {
                "conditions": {
                  "options": {
                    "caseSensitive": true,
                    "leftValue": "",
                    "typeValidation": "strict",
                    "version": 2
                  },
                  "conditions": [
                    {
                      "id": "549aa180-f02d-4df1-9b32-618c7d431405",
                      "leftValue": "={{ $json.quantidade_erros }}",
                      "rightValue": "={{ $('Variables').item.json.threshould_conhecido }}",
                      "operator": {
                        "type": "number",
                        "operation": "gt"
                      }
                    }
                  ],
                  "combinator": "and"
                },
                "options": {}
              },
              "type": "n8n-nodes-base.filter",
              "typeVersion": 2.2,
              "position": [
                -1160,
                -980
              ],
              "id": "92cd62ea-6300-47da-a246-fa953e3be9c8",
              "name": "Quatidade > 10"
            },
            {
              "parameters": {
                "fromEmail": "=rgouvea@suthub.com",
                "toEmail": "={{ $item(\"0\").$node[\"Variables\"].json[\"email_movedesk\"] }}",
                "subject": "Erros conhecidos com quantidade acima de 10",
                "emailFormat": "text",
                "text": "=Foi detectado na última hora em \"Críticas CSF\", uma quantidade de erros conhecidos superior a {{ $('Variables').item.json.threshould_conhecido }}.\n\nProcesso: Adesão\nSeguradora: {{ $json.seguradora }}\nEtapa: {{ $json.etapa }} \nErro: {{ $json.razao }}\nQuantidade: {{ $json.quantidade_erros }}\n\nDeveloper by Data Team\nCreated: 2025-07-31\nUpdated: 2025-08-05",
                "options": {
                  "ccEmail": "rgouvea@suthub.com"
                }
              },
              "type": "n8n-nodes-base.emailSend",
              "typeVersion": 2.1,
              "position": [
                -800,
                -980
              ],
              "id": "d52e38c2-168a-49ea-adc0-9c266fed989c",
              "name": "Abre chamado com qtde de erro > 10",
              "webhookId": "c27cee61-8639-46c0-8c5c-57467c827e1b",
              "credentials": {
                "smtp": {
                  "id": "490Ja5pa65ODxxXD",
                  "name": "SMTP Sutlab Mon"
                }
              }
            }
          ],
          "connections": {
            "MySQL - Lê erros da última hora": {
              "main": [
                [
                  {
                    "node": "Escapando aspas simples na msg de erro",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "When clicking ‘Execute workflow’": {
              "main": [
                [
                  {
                    "node": "Variables",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Escapando aspas simples na msg de erro": {
              "main": [
                [
                  {
                    "node": "Quatidade > 10",
                    "type": "main",
                    "index": 0
                  },
                  {
                    "node": "Erro conhecido?",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Variables": {
              "main": [
                [
                  {
                    "node": "MySQL - Lê erros da última hora",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Schedule Trigger": {
              "main": [
                [
                  {
                    "node": "Variables",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Erro conhecido?": {
              "main": [
                [
                  {
                    "node": "Conhecido ou desconhecido?",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Conhecido ou desconhecido?": {
              "main": [
                [
                  {
                    "node": "Abre chamado para erro desconhecido",
                    "type": "main",
                    "index": 0
                  }
                ],
                [
                  {
                    "node": "No Operation, do nothing",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Abre chamado para erro desconhecido": {
              "main": [
                [
                  {
                    "node": "Carrega erro desconhecido",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Quatidade > 10": {
              "main": [
                [
                  {
                    "node": "Abre chamado com qtde de erro > 10",
                    "type": "main",
                    "index": 0
                  }
                ]
              ]
            },
            "Abre chamado com qtde de erro > 10": {
              "main": [
                []
              ]
            }
          },
          "settings": {
            "executionOrder": "v1"
          },
          "staticData": {
            "node:Schedule Trigger": {
              "recurrenceRules": []
            }
          },
          "meta": {
            "templateCredsSetupCompleted": true
          },
          "pinData": {},
          "versionId": "a9a07ca8-228e-4f21-a6ce-c9ec94be3163",
          "triggerCount": 1,
          "tags": [
            {
              "createdAt": "2025-07-29T17:22:58.627Z",
              "updatedAt": "2025-07-29T17:22:58.627Z",
              "id": "IWuR2gsUJATZtiw5",
              "name": "latest"
            },
            {
              "createdAt": "2025-07-29T17:32:50.846Z",
              "updatedAt": "2025-07-29T17:32:50.846Z",
              "id": "fQHqEjQmqqubgutx",
              "name": "monitoramento"
            },
            {
              "createdAt": "2025-07-29T17:33:00.368Z",
              "updatedAt": "2025-07-29T17:33:00.368Z",
              "id": "Fn3RtlQfZGMdTm58",
              "name": "prod"
            },
            {
              "createdAt": "2025-07-31T18:18:44.803Z",
              "updatedAt": "2025-07-31T18:18:44.803Z",
              "id": "yffj8p12BK5O1xLr",
              "name": "schedule"
            }
          ]
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-20T19:16:38.863Z",
  "versionId": "fb585381-c454-40b4-af4e-ad1c4251c80c"
}